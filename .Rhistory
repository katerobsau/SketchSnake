data("us_rent_income")
View("us_rent_income")
View(us_rent_income)
eg1 <- pivot_wider(us_rent_income, names_from = varialbe, values_from = estimate)
eg1 <- pivot_wider(us_rent_income, names_from = variable, values_from = estimate)
View(eg1)
?us_rent_income
test_data = us_rent_income
test_data = select(test_data, -us_rent_income)
test_data = select(test_data, -moe)
View(test_data)
eg1 <- pivot_wider(test_data, names_from = variable, values_from = estimate)
View(eg1)
names(us_income_moe)
names(us_income_data)
names(us_rent_data)
names(us_rent_income)
select(us_rent_income, GEOID)
select(us_rent_income, c(GEOID, NAME))
select(us_rent_income, c("GEOID", "NAME"))
us_rent_income[,-moe]
summary(us_rent_income)
summary(us_rent_income$variable)
unique(us_rent_income$variable)
us_rent_income %>%
select(-moe) %>%
pivot_wider(names_from  = variable,
values_from =  estimate)
us_rent_income %>%
select(-moe) %>%
pivot_wider(names_from  = variable,
values_from =  estimate) %>%
head(1)
us_rent_income %>%
select(-moe) %>%
pivot_wider(names_from  = variable,
values_from =  estimate) %>%
head(3)
head(us_rent_income)
us_rent_income_new$estimate
us_rent_income_new = us_rent_income %>%
select(-moe) %>%
pivot_wider(names_from  = variable,
values_from =  estimate)
us_rent_income_new$income
summary(us_rent_income_new$income)
library(vegan)
install.packages(vegan)
install.packages('vegan')
library(vegan)
?soec
?spec
?specnumber
library(VennDiagram)
install.packages(VennDiagram)
install.packages("VennDiagram")
library(VennDiagram)
draw.pairwise.venn(
area1 = 0.8, area2 = 0.4, cross.area = 0.2,
category = c("Dog People", "Cat People"),
lty = rep("blank", 2),
fill = c("light blue", "pink"),
alpha = rep(0.5, 2),
cat.pos = c(0,0),
cat.dist =rep(0.025,2),
scaled = FALSE))
draw.pairwise.venn(
area1 = 0.8, area2 = 0.4, cross.area = 0.2,
category = c("Dog People", "Cat People"),
lty = rep("blank", 2),
fill = c("light blue", "pink"),
alpha = rep(0.5, 2),
cat.pos = c(0,0),
cat.dist =rep(0.025,2),
scaled = FALSE)
?draw.pairwise.venn
draw.pairwise.venn(
area1 = 0.8, area2 = 0.4, cross.area = 0.2,
category = c("Dog People", "Cat People"),
lty = rep("blank", 2),
fill = c("light blue", "pink"),
alpha = rep(0.5, 2),
cat.pos = c(0,0),
cat.dist =rep(0.025,2),
scaled = TRUE)
draw.pairwise.venn(
area1 = 0.8, area2 = 0.4, cross.area = 0.2,
category = c("Dog People", "Cat People"),
lty = rep("blank", 2),
fill = c("light blue", "pink"),
alpha = rep(0.5, 2),
cat.pos = c(0,0),
cat.dist =rep(0.025,2),
scaled = TRUE)
571+148+151
us_rent_income
select(us_rent_income, GEOID:estimate)  %>% head()
select(us_rent_income, GEOID:estimate)  %>% head()  %>% View()
names(us_rent_income)
select(us_rent_income, c(GEOID, NAME, variable, estimateR()))
select(us_rent_income, c(GEOID, NAME, variable, estimate))
?select
select(us_rent_income, GEOID, NAME, variable, estimate)
us_rent_income_new %>% pivot_wider(names_from = variable, values_from = estimate) %>% View()
us_rent_income_new %>% pivot_wider(names_from = variable, values_from = estimate) %>% View()
us_rent_income_new %>% pivot_wider(names_from = variable, values_from = estimate)
us_rent_income %>% pivot_wider(names_from = variable, values_from = estimate) %>% View()
y = c(1.16, 5.58, 2.35, 3.14)
mean(y)
median(y)
sd(y)
?gather
?geom_bar
dice_data = data.frame(x  = 1:6,
p = rep(1/6, 6))
ggplot(dice_data) +
geom_bar()
library(ggplot2)
dice_data = data.frame(x  = 1:6,
p = rep(1/6, 6))
ggplot(dice_data) +
geom_bar()
ggplot(dice_data, aes(x = x, y = p)) +
geom_bar()
ggplot(dice_data, aes(x = x)) +
geom_bar()
wieghted_die  = c(rep(1/10, 5), 1/2)
weighted_die  = c(rep(1/10, 5), 1/2)
sum(wieghted_die)
dice_data = data.frame(x  = 1:6,
p = p,
weighted = weighted_die)
ggplot(dice_data, aes(x = x)) +
geom_bar()
ggplot(dice_data, aes(x = x, weight = p)) +
geom_bar()
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar()
dice_data = data.frame(x  = 1:6,
p = p,
weighted = weighted_die)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar()
View(dice_data)
dice_data = data.frame(x  = 1:6,
p = p,
weighted = weighted_die)
p = rep(1/6, 6)
weighted_die  = c(rep(1/10, 5), 1/2)
sum(wieghted_die)
dice_data = data.frame(x  = 1:6,
p = p,
weighted = weighted_die)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar()
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(limits = 1:6)
library(ggplot2)
unweighted_die = rep(1/6, 6)
weighted_die  = c(rep(1/10, 5), 1/2)
sum(wieghted_die)
dice_data = data.frame(x  = 1:6,
p = unweighted_die,
weighted = weighted_die)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(limits = 1:6)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(limits = c(1,6))
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(limits = c(1:6))
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(limits = 1:6)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(breaks = 1:6)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(labels = 1:6, breaks = 1:6)
?scale_x_discrete
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(labels = as.character(1:6),
breaks = 1:6)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(breaks = 1:6)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(labels = c(1:6))
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(labels = c(seq(1,6)))
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(labels = c(seq(1,6))) +
ylab("Probability")
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(labels = c(seq(1,6))) +
ylab("Probability") +
theme_bw()
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(limits = c(seq(1,6))) +
ylab("Probability") +
theme_bw()
View(dice_data)
unweighted_die = rep(1/6, 6)
weighted_die  = c(rep(1/10, 5), 1/2)
sum(wieghted_die)
dice_data = data.frame(x  = 1:6,
unweighted_p = unweighted_die,
weighted_p = weighted_die)
ggplot(dice_data, aes(x = x, weight = weighted)) +
geom_bar() +
scale_x_discrete(limits = c(seq(1,6))) +
ylab("Probability") +
theme_bw()
library(ggplot2)
unweighted_die = rep(1/6, 6)
weighted_die  = c(rep(1/10, 5), 1/2)
dice_data = data.frame(x  = 1:6,
unweighted_p = unweighted_die,
weighted_p = weighted_die)
dice_data = data.frame(n = 1:6,
unweighted_p = unweighted_die,
weighted_p = weighted_die)
View(dice_data)
ggplot(dice_data, aes(x = n, weight = unweighted_p)) +
geom_bar()
ggplot(dice_data, aes(x = n, weight = unweighted_p)) +
geom_bar() +
scale_x_discrete(limits = c(seq(1,6))) +
ylab("Probability") +
theme_bw()
ggplot(dice_data, aes(x = n, weight = unweighted_p)) +
geom_bar() +
scale_x_discrete(limits = c(seq(1,6))) +
ylab("P(N = n)") +
xlab("n") +
theme_bw()
ggplot(dice_data, aes(x = n, weight = weighted_p)) +
geom_bar() +
scale_x_discrete(limits = c(seq(1,6))) +
ylab("P(N = n)") +
xlab("n") +
theme_bw()
sum(dice_data$weighted_p)
?stat_function
ggplot(data = x_range, aes(x = x)) +
stat_function()
x_range = data.frame(x = c(0,5))
f_t <- function(t){
value_at_t = 2/25*t
return(value_at_t)
}
ggplot(data = x_range, aes(x = x)) +
stat_function()
ggplot(data = x_range, aes(x = x)) +
stat_function(fun = f_t)
ggplot(data = x_range, aes(x = x)) +
stat_function(fun = f_t) +
xlab("t") +
ylab("f(t)") +
ggtitle("Example: Probability Density Function") +
theme_bw()
x_range = data.frame(x = c(0,5))
x_range
t_range = data.frame(t = c(0,5))
ggplot(data = t_range, aes(x = t)) +
stat_function(fun = f_t)
ggplot(data = t_range, aes(x = t)) +
stat_function(fun = f_t) +
xlab("t") +
ylab("f(t)") +
ggplot(data = t_range, aes(x = t)) +
stat_function(fun = f_t) +
xlab("t") +
ylab("f(t)") +
ggtitle("Example: Probability Density Function") +
theme_bw()
ggplot(data = t_range, aes(x = t)) +
stat_function(fun = f_t) +
xlab("t") +
ylab("f(t)") +
ggtitle("Example: Probability Density Function") +
theme_bw()
## Another pmf for the sum of two dice
outcomes = expand.grid(D1 = 1:6, D2 = 1:6) %>%
as.data.frame() %>%
mutate(S = D1 + D2)
## Another pmf for the sum of two dice
library(tidyverse)
outcomes = expand.grid(D1 = 1:6, D2 = 1:6) %>%
as.data.frame() %>%
mutate(S = D1 + D2)
two_dice_outcomes = expand.grid(D1 = 1:6, D2 = 1:6) %>%
as.data.frame() %>%
mutate(S = D1 + D2)
View(two_dice_outcomes)
range(two_dice_outcomes$S)
two_dice_outcomes = expand.grid(D1 = 1:6, D2 = 1:6) %>%
as.data.frame() %>%
mutate(S = D1 + D2) %>%
mutate(p_s = S  / nrow(.))
sum(two_dice_outcomes$p_s)
y <- c(4.81,5.61,3.91,4.13,3.27)
mean(y)
median(y)
sd(y)
round(sd(y), 3)
y  <- c(y, NA)
y
mean(y_new)
mean(y_new)
y_new  <- c(y, NA)
mean(y_new)
mean(y_new, na.rm = TRUE)
10.58 + 17.18 + 19.14+5.26 + 19.16 + 20.16 +15.17 +19.2
125.85
library(sketch)
setwd("~/Documents/Git/SketchSnake")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_grow.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_all.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_collision.R")
sketch::source_r("snake_collision.R")
?break
sketch::source_r("snake_collision.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_grow.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
1+1
source('~/Documents/Git/SketchSnake/snake_direction.R')
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
package_version(sketch)
package_version("sketch")
install.packages("sketch")
install.packages("sketch")
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
devtools::install_github("kcf-jackson/sketch", ref = "develop")
devtools::install_github("kcf-jackson/sketch", ref = "develop")
source('~/Documents/Git/SketchSnake/snake_fruit.R')
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R", debug = TRUE)
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R", debug = TRUE)
source('~/Documents/Git/SketchSnake/snake_direction.R')
source('~/Documents/Git/SketchSnake/snake_direction.R')
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_direction.R")
sketch::source_r("snake_grow.R")
sketch::source_r("snake_grow.R")
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
sketch::source_r("snake_grow.R", debug =  TRUE)
fev1_df <- fev1  %>%
filter(age > 10, age < 11) %>%
mutate(FEV1 = exp(logFEV1))
# install.packages("ALA", repos = "http://R-Forge.R-project.org")
library(ALA)
library(tidyverse)
data(fev1)
fev1_df <- fev1  %>%
filter(age > 10, age < 11) %>%
mutate(FEV1 = exp(logFEV1))
?sample
?sample_n
?dplyr::sample_n
?slice_sample
# Goal:
# 100 data sets representing 100 experiments where we
# sample 7 kids’ FEV1 from a large population of children
?dplyr::sample_n
fev1_sample_df <- fev1_df %>%
slice_sample(7)
library(tidyverse)
library(tidyverse)
update.packages()
